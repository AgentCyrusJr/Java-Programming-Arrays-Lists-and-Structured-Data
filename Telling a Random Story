=====================================================second week problem===============================================================
package gradLibs_secondweek;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

public class findUnique {
	
	private ArrayList<Integer> count;
	private ArrayList<String>  word;
//	private String string1, string2;
	private int countNum, maxNum;
	
	public findUnique(){
		count =	new ArrayList<Integer>();
		word  = new ArrayList<String>();	
		countNum=0;
		maxNum = Integer.MIN_VALUE;
	}
	
	//Very important method in turning txt file into strings
	//Using trim() and split() methods to format the file into good order
	public String txt2String(File file){
        StringBuilder result = new StringBuilder();
        try{
        	//read in the file
            BufferedReader br = new BufferedReader(new FileReader(file));
            String s = null;
            //each turn with one line scanning
            while((s = br.readLine())!=null){
            	//trim() method
            	s = s.trim();
            	//split with "space"
            	String[] lineBuffer = s.split(" ");
            	for(String ss : lineBuffer){
           			if(ss.length()>1){
	           			char ch = ss.charAt(0);
	           			//ignore the condition which symbols such as \t & \n & \r occupy 
	           			//the whole line with no actual meanings
	           			if((ch>=65 && ch<=90) || (ch>=97 && ch<122)){
		           			String string = ss.toLowerCase();
		           			if(word.isEmpty()){
	            				word.add(string);
	            				count.add(1);					
	            			}
		            		else{
		            			if(word.contains(string)){
		           					int index = word.indexOf(string);
		           					count.set(index, count.get(index)+1);
		           				}
		           				else{
		           					word.add(string);
		           					count.add(1);
		           				}	
		           			}		
	           			}	
           			}	
           		}
           	}
            br.close();    
        }catch(Exception e){
            e.printStackTrace();
        }
        return result.toString();
    }
	
	public void searchUniqueWord(){
		for(int i : count){
			if(i == 1){
				countNum ++;
			}
		}
		System.out.println("Number of Unique Words is: " + countNum);
	}
	
	public void searchMostWord(){
		for(int i : count){
			if(i > maxNum){
				maxNum = i;
			}
		}
		int index = count.indexOf(maxNum);
		String mostOftenWord = word.get(index);
		System.out.println("Word with most freqs is: " + mostOftenWord + ", with times of occurance " + maxNum);
	}
	
	public void countCharacter(){
		HashMap<String, Integer> nameMap = new HashMap<String, Integer>();
		String[] nameArray = 
			{"DUKE","FREDERICK","AMIENS","JAQUES","LE","CHARLES","OLIVER","ORLANDO","ADAM","DENNIS",
				"TOUCHSTONE","MARTEXT","CORIN","SILVIUS","WILLIAM","ROSALIND","CELIA","PHEBE","AUDREY"};
		for(String name : nameArray){
			name = name.toLowerCase();
			int index = word.indexOf(name);
			int countName = count.get(index);
			nameMap.put(name, countName);
		}
		for(int i = 0 ; i<nameArray.length; i++){
			System.out.print(nameMap.get(nameArray[i].toLowerCase()) + " ");
		}
	}
	
	public static void main(String[] args) {
		File file = new File("F:/Java/dukeProgramming/src/gradLibs_secondweek/likeit.txt");
		findUnique find = new findUnique();
		find.txt2String(file);
		find.searchUniqueWord();
		find.searchMostWord();
		find.countCharacter();
		
	}

}
